/*
 * (C) Copyright 2017 Nuxeo (http://nuxeo.com/) and contributors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * you may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Contributors:
 *     Funsho David
 */

node('DYNAMIC') {
    timeout(10) {
        try {
            stage('checkout') {
                checkout scm
                git_files_modified_for_repo = sh(returnStdout: true, script: 'git diff-tree --no-commit-id --name-only -r HEAD -- shibboleth-sp | wc -l').trim()
                echo "Number of files changed for this commit -> ${git_files_modified_for_repo}"
            }
            if (git_files_modified_for_repo == "0") {
                echo "No commit related to shibboleth-sp, no need to build a new image."
                currentBuild.result = 'SUCCESS'
                return
            }
            dir("shibboleth-sp") {
                stage('clean') {
                    sh "make clean"
                }
                stage('build') {
                    sh 'sed -i "s/^SCM-REF=.*/SCM-REF=$(git rev-parse HEAD)/g" Makefile'
                    sh "make build"
                }
                stage('test') {
                    sh "make test"
                }
                stage('push') {
                    sh "make push"
                }
                stage('tag') {
                    sh "make tag"
                }
            }

            step([$class: 'JiraIssueUpdater', issueSelector: [$class: 'DefaultIssueSelector'], scm: scm])
        } finally {
            dir("shibboleth-sp/tests") {
                sh 'docker-compose kill'
                sh 'docker-compose rm'
                sh 'docker system prune -f'
            }
        }        
    }
}